;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28/02/2019 11:47:10
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF9E  	GOTO        316
_interrupt:
;Practica5A.c,5 :: 		void interrupt(){
;Practica5A.c,6 :: 		key=tecla();
0x0008	0xD830      	RCALL       _tecla
0x000A	0xF015C000  	MOVFF       R0, _key
;Practica5A.c,7 :: 		x=PORTB;
0x000E	0xF016CF81  	MOVFF       PORTB, _x
;Practica5A.c,8 :: 		INTCON.RBIF=0;
0x0012	0x90F2      	BCF         INTCON, 0 
;Practica5A.c,9 :: 		PORTD=key;
0x0014	0xFF83C000  	MOVFF       R0, PORTD
;Practica5A.c,10 :: 		}
L_end_interrupt:
L__interrupt15:
0x0018	0x0011      	RETFIE      1
; end of _interrupt
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x001A	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x001C	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x001E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0020	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0022	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0024	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0028	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x002C	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x002E	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0030	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0034	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0038	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x003A	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x003C	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x003E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0040	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0042	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0044	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0046	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0048	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x004A	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x004C	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x004E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0050	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0052	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0054	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0056	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x0058	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x005C	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0060	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0064	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x0068	0x0012      	RETURN      0
; end of _Mul_16X16_U
_tecla:
;tecla12int.h,25 :: 		unsigned char tecla() // Esta funcion devuelve el valor asociado a la tecla
;tecla12int.h,28 :: 		unsigned char columna=0, fila, aux1=0x10, aux2;
0x006A	0x6A18      	CLRF        tecla_columna_L0 
0x006C	0x0E10      	MOVLW       16
0x006E	0x6E19      	MOVWF       tecla_aux1_L0 
0x0070	0x0E31      	MOVLW       49
0x0072	0x6E1A      	MOVWF       tecla_teclado_L0 
0x0074	0x0E32      	MOVLW       50
0x0076	0x6E1B      	MOVWF       tecla_teclado_L0+1 
0x0078	0x0E33      	MOVLW       51
0x007A	0x6E1C      	MOVWF       tecla_teclado_L0+2 
0x007C	0x0E34      	MOVLW       52
0x007E	0x6E1D      	MOVWF       tecla_teclado_L0+3 
0x0080	0x0E35      	MOVLW       53
0x0082	0x6E1E      	MOVWF       tecla_teclado_L0+4 
0x0084	0x0E36      	MOVLW       54
0x0086	0x6E1F      	MOVWF       tecla_teclado_L0+5 
0x0088	0x0E37      	MOVLW       55
0x008A	0x6E20      	MOVWF       tecla_teclado_L0+6 
0x008C	0x0E38      	MOVLW       56
0x008E	0x6E21      	MOVWF       tecla_teclado_L0+7 
0x0090	0x0E39      	MOVLW       57
0x0092	0x6E22      	MOVWF       tecla_teclado_L0+8 
0x0094	0x0E2A      	MOVLW       42
0x0096	0x6E23      	MOVWF       tecla_teclado_L0+9 
0x0098	0x0E30      	MOVLW       48
0x009A	0x6E24      	MOVWF       tecla_teclado_L0+10 
0x009C	0x0E23      	MOVLW       35
0x009E	0x6E25      	MOVWF       tecla_teclado_L0+11 
;tecla12int.h,32 :: 		delay_ms(Debounce);// antes de empezar a escanear las filas y las columnas se
0x00A0	0x0E1A      	MOVLW       26
0x00A2	0x6E0C      	MOVWF       R12, 0
0x00A4	0x0EF8      	MOVLW       248
0x00A6	0x6E0D      	MOVWF       R13, 0
L_tecla0:
0x00A8	0x2E0D      	DECFSZ      R13, 1, 0
0x00AA	0xD7FE      	BRA         L_tecla0
0x00AC	0x2E0C      	DECFSZ      R12, 1, 0
0x00AE	0xD7FC      	BRA         L_tecla0
0x00B0	0x0000      	NOP
;tecla12int.h,34 :: 		for(fila=0; fila<Rows; fila++) // escaneamos las filas para averiguar la fila
0x00B2	0x6A17      	CLRF        tecla_fila_L0 
L_tecla1:
0x00B4	0x0E04      	MOVLW       4
0x00B6	0x5C17      	SUBWF       tecla_fila_L0, 0 
0x00B8	0xE20B      	BC          L_tecla2
;tecla12int.h,36 :: 		if((PORTB&aux1)==0x00) break; //en la fila de la tecla pulsada hay un 0 y en
0x00BA	0x5019      	MOVF        tecla_aux1_L0, 0 
0x00BC	0x1481      	ANDWF       PORTB, 0 
0x00BE	0x6E01      	MOVWF       R1 
0x00C0	0x5001      	MOVF        R1, 0 
0x00C2	0x0A00      	XORLW       0
0x00C4	0xE101      	BNZ         L_tecla4
0x00C6	0xD004      	BRA         L_tecla2
L_tecla4:
;tecla12int.h,37 :: 		aux1=(aux1<<1);                //las demás hay un 1.
0x00C8	0x3619      	RLCF        tecla_aux1_L0, 1 
0x00CA	0x9019      	BCF         tecla_aux1_L0, 0 
;tecla12int.h,34 :: 		for(fila=0; fila<Rows; fila++) // escaneamos las filas para averiguar la fila
0x00CC	0x2A17      	INCF        tecla_fila_L0, 1 
;tecla12int.h,38 :: 		}
0x00CE	0xD7F2      	BRA         L_tecla1
L_tecla2:
;tecla12int.h,40 :: 		PORTB=0x01; // valor del puerto B para escanear la primera columna (columna=0).
0x00D0	0x0E01      	MOVLW       1
0x00D2	0x6E81      	MOVWF       PORTB 
;tecla12int.h,42 :: 		while((PORTB&MASK)!=MASK)// se escanean las columnas hasta que se encuentra la
L_tecla5:
0x00D4	0x0EF0      	MOVLW       240
0x00D6	0x1481      	ANDWF       PORTB, 0 
0x00D8	0x6E01      	MOVWF       R1 
0x00DA	0x5001      	MOVF        R1, 0 
0x00DC	0x0AF0      	XORLW       240
0x00DE	0xE008      	BZ          L_tecla6
;tecla12int.h,44 :: 		PORTB=(PORTB<<1);       //caso, las filas estarán todas a 1. Al escanear las
0x00E0	0xF000CF81  	MOVFF       PORTB, R0
0x00E4	0x3600      	RLCF        R0, 1 
0x00E6	0x9000      	BCF         R0, 0 
0x00E8	0xFF81C000  	MOVFF       R0, PORTB
;tecla12int.h,45 :: 		columna++;            //columnas se produce un flanco de subida en el terminal
0x00EC	0x2A18      	INCF        tecla_columna_L0, 1 
;tecla12int.h,46 :: 		}                      //correspondiente a la fila de la tecla pulsada, lo que
0x00EE	0xD7F2      	BRA         L_tecla5
L_tecla6:
;tecla12int.h,49 :: 		PORTB=0x00; //condiciones del PORTB de espera a que se pulse una nueva tecla
0x00F0	0x6A81      	CLRF        PORTB 
;tecla12int.h,51 :: 		do // esperamos a que se deje de pulsar la tecla para enviar su valor.
L_tecla7:
;tecla12int.h,52 :: 		{delay_ms(2);
0x00F2	0x0E06      	MOVLW       6
0x00F4	0x6E0C      	MOVWF       R12, 0
0x00F6	0x0E30      	MOVLW       48
0x00F8	0x6E0D      	MOVWF       R13, 0
L_tecla10:
0x00FA	0x2E0D      	DECFSZ      R13, 1, 0
0x00FC	0xD7FE      	BRA         L_tecla10
0x00FE	0x2E0C      	DECFSZ      R12, 1, 0
0x0100	0xD7FC      	BRA         L_tecla10
0x0102	0x0000      	NOP
;tecla12int.h,53 :: 		}while((PORTB&0xF0)!=0xF0); //Al soltar la tecla, se produce un cambio de nivel
0x0104	0x0EF0      	MOVLW       240
0x0106	0x1481      	ANDWF       PORTB, 0 
0x0108	0x6E01      	MOVWF       R1 
0x010A	0x5001      	MOVF        R1, 0 
0x010C	0x0AF0      	XORLW       240
0x010E	0xE1F1      	BNZ         L_tecla7
;tecla12int.h,57 :: 		aux2=teclado[fila][columna];//devuelve el valor ASCII de la tecla pulsada
0x0110	0x0E03      	MOVLW       3
0x0112	0x6E00      	MOVWF       R0 
0x0114	0x0E00      	MOVLW       0
0x0116	0x6E01      	MOVWF       R1 
0x0118	0xF004C017  	MOVFF       tecla_fila_L0, R4
0x011C	0x0E00      	MOVLW       0
0x011E	0x6E05      	MOVWF       R5 
0x0120	0xDF7C      	RCALL       _Mul_16X16_U
0x0122	0x0E1A      	MOVLW       tecla_teclado_L0
0x0124	0x2600      	ADDWF       R0, 1 
0x0126	0x0E00      	MOVLW       hi_addr(tecla_teclado_L0)
0x0128	0x2201      	ADDWFC      R1, 1 
0x012A	0x5018      	MOVF        tecla_columna_L0, 0 
0x012C	0x2400      	ADDWF       R0, 0 
0x012E	0x6EE9      	MOVWF       FSR0L 
0x0130	0x0E00      	MOVLW       0
0x0132	0x2001      	ADDWFC      R1, 0 
0x0134	0x6EEA      	MOVWF       FSR0H 
;tecla12int.h,58 :: 		return aux2;
0x0136	0xF000CFEE  	MOVFF       POSTINC0, R0
;tecla12int.h,59 :: 		}
L_end_tecla:
0x013A	0x0012      	RETURN      0
; end of _tecla
_main:
;Practica5A.c,12 :: 		void main() {
;Practica5A.c,13 :: 		ADCON1=0x07;
0x013C	0x0E07      	MOVLW       7
0x013E	0x6EC1      	MOVWF       ADCON1 
;Practica5A.c,14 :: 		TRISB=0xF0;
0x0140	0x0EF0      	MOVLW       240
0x0142	0x6E93      	MOVWF       TRISB 
;Practica5A.c,15 :: 		TRISD=0;
0x0144	0x6A95      	CLRF        TRISD 
;Practica5A.c,16 :: 		PORTD=0;
0x0146	0x6A83      	CLRF        PORTD 
;Practica5A.c,17 :: 		PORTB=0;
0x0148	0x6A81      	CLRF        PORTB 
;Practica5A.c,18 :: 		INTCON2.RBPU=0;
0x014A	0x9EF1      	BCF         INTCON2, 7 
;Practica5A.c,19 :: 		INTCON.RBIF=0;
0x014C	0x90F2      	BCF         INTCON, 0 
;Practica5A.c,20 :: 		INTCON.RBIE=1;
0x014E	0x86F2      	BSF         INTCON, 3 
;Practica5A.c,21 :: 		while(1){
L_main11:
;Practica5A.c,22 :: 		x=PORTB;
0x0150	0xF016CF81  	MOVFF       PORTB, _x
;Practica5A.c,23 :: 		PORTD=0x3D;
0x0154	0x0E3D      	MOVLW       61
0x0156	0x6E83      	MOVWF       PORTD 
;Practica5A.c,24 :: 		}
0x0158	0xD7FB      	BRA         L_main11
;Practica5A.c,25 :: 		}
L_end_main:
0x015A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [18]    _interrupt
0x001A      [80]    _Mul_16X16_U
0x006A     [210]    _tecla
0x013C      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _key
0x0016       [1]    _x
0x0017       [1]    tecla_fila_L0
0x0018       [1]    tecla_columna_L0
0x0019       [1]    tecla_aux1_L0
0x001A      [12]    tecla_teclado_L0
0x0F81       [1]    PORTB
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
